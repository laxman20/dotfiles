[ -f ~/.config/zsh/config.zsh ] && source ~/.config/zsh/config.zsh
[ -f ~/.zsh/antigen.zsh ] && source ~/.zsh/antigen.zsh

fpath=(~/.config/zsh/completions $fpath)

autoload -Uz compinit && compinit
autoload -U edit-command-line
zle -N edit-command-line
bindkey -e
bindkey '^x^e' edit-command-line
zstyle ':completion:*' completer _expand_alias _complete _ignored
zstyle ':completion:*' regular true

antigen bundle zsh-users/zsh-autosuggestions

antigen bundle zsh-users/zsh-syntax-highlighting

antigen apply

set -o ignoreeof

alias vim='nvim'
alias cat='bat'
alias todo='todo-go'

alias run='./Taskfile'
alias gs='git status'
alias gst='git status'
alias gdiff='git diff'
alias gcm='git commit --no-verify -m "$(jira): '
alias gre='git checkout -- .'
alias c1="awk '{print \$1}'"
alias c2="awk '{print \$2}'"
alias c3="awk '{print \$3}'"
alias c4="awk '{print \$4}'"
alias c5="awk '{print \$5}'"
alias c6="awk '{print \$6}'"
alias c7="awk '{print \$7}'"
alias c8="awk '{print \$8}'"
alias c9="awk '{print \$9}'"

alias kpods='kubectl get pods'
alias kscale='kubectl scale deploy'

alias uncrustify-java='uncrustify -c $HOME/.config/uncrustify/java-uncrustify.cfg --no-backup --replace'

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='fd --type f'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'

PROMPT='%B%F{240}%1~%f%b > '

export EDITOR='nvim'
export LESS='-S'

full-join() {
	cat <(join -t',' -a1 -o'0,1.2,2.2' <(cat "$1") <(cat "$2")) \
		<(join -t',' -a2 -o'0,1.2,2.2' <(cat "$1") <(cat "$2")) \
		| sort -u
}

jira() {
	git log | ag -o 'PRO-[0-9]{3,}' | head -n1
}

vimscript() {
	nvim `which "$1"`
}

chenv() {
	strat environment get-credentials "$1" --region "${2:-dlas1}"
}

kube-secret() {
	kubectl get secret $(kubectl get secret | fzf --reverse --height 40% | c1) -o yaml \
		| ag '^([ ]*)?uri:' | sed 's/^.*uri: //' | base64 -D | sed 's/:3306/:3307/'
}

gch() {
	git checkout $(git branch -a -vv --color=always --sort=committerdate | grep -v '/HEAD\s' \
		| fzf --height 40% --ansi --multi --tac | sed 's/^..//' | awk '{print $1}' \
		| sed 's#^remotes/[^/]*/##')
}

services() {
	curl -s "https://wfm-tenant-web.wfm-dev.dlas1.ucloud.int/assets/services_export_$1.csv" \
		| tail -n+2 | tr "," "	" | ag --no-color "$2" | column -t
}

clean-psr() {
	mv ~/Downloads/*-*-*-*-*.zip ~/Downloads/psrtests
	mv ta-regression* ~/Downloads/psrtests
}

integration-test() {
	mvn clean integration-test -U -Pintegrationtest -Dinclude.test.tags="$1"
}

currentmillis() {
	gdate -d @$(  echo "($1 + 500) / 1000" | bc)
}


if [[ -f "$HOME/vault/client.key" && -f "$HOME/vault/client.cert" ]]; then
	export VAULT_ADDR=https://vault-d-dc.mia.ucloud.int:8200
	export VAULT_ROOT=secret/perception
	export VAULT_CLIENT_KEY_PATH=~/vault/client.key
	export VAULT_CLIENT_CERT_PATH=~/vault/client.cert

	alias vault-login="vault login -method=cert -client-cert=$VAULT_CLIENT_CERT_PATH -client-key=$VAULT_CLIENT_KEY_PATH"
fi

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/laxmanso/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/laxmanso/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/laxmanso/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/laxmanso/google-cloud-sdk/completion.zsh.inc'; fi

export PATH=$HOME/.local/bin/homebrew/opt/mongodb-community@4.0/bin:$PATH
export PATH=$HOME/go/bin:$PATH
export CLOUDSDK_CORE_PROJECT=d-ulti-hcm-ev-9561 
export PIPENV_VENV_IN_PROJECT=1
